<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="StudentMapper"> 
    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. --> 
    <resultMap type="kr.jinju.models.Student" id="student"> 
        <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. --> 
        <result property="studNo" column="studno" />
        <result property="name" column="name"/>
        <result property="userId" column="userid"/>
        <result property="grade" column="grade"/>
        <result property="idNum" column="idnum"/>
        <result property="birthDate" column="birthdate"/>
        <result property="tel" column="tel"/>
        <result property="height" column="height"/>
        <result property="weight" column="weight"/>
        <result property="deptNo" column="deptno" />
        <result property="profNo" column="profno"/> 
        
    </resultMap> 

    <!-- 데이터 저장을 위한 기능 정의 --> 
    <insert id="insert" 
        parameterType="kr.jinju.models.Student" 
        useGeneratedKeys="true" 
        keyProperty="deptNo"> 
        INSERT INTO student (name, userid, grade, idnum, birthdate, tel, height, weight, deptno, profno) VALUES (#{name}, #{userId}, #{grade}, #{idNum}, #{birthDate}, #{tel}, #{height}, #{weight}, #{deptNo}, #{profNo});
    </insert>

    <!-- 데이터 삭제를 위한 기능 정의 --> 
    <delete id="delete" 
        parameterType="kr.jinju.models.Student"> 
        DELETE FROM student WHERE studno=#{studNo}; 
    </delete> 

    <!-- 데이터 갱신을 위한 기능 정의 --> 
    <update id="update" 
        parameterType="kr.jinju.models.Student"> 
        UPDATE student SET name=#{name}, userid=#{userId}, grade=#{grade}, idnum=#{idNum}, birthdate=#{birthDate}, tel=#{tel}, height=#{height}, weight=#{weight}, deptno=#{deptNo}, profno=#{profNo} WHERE studno=#{studNo};
    </update> 

    <!-- 단일행 조회를 위한 기능 정의 --> 
    <select id="selectItem" 
        parameterType="kr.jinju.models.Student" 
        resultMap="student"> 
        SELECT studno, name, userid, grade, idnum, birthdate, tel, height, weight, deptno, profno FROM student WHERE studno=#{studNo};
    </select> 

    <!-- 다중행 조회를 위한 기능 정의 --> 
    <select id="selectList" 
        resultMap="student"> 
        SELECT studno, name, userid, grade, idnum, birthdate, tel, height, weight, deptno, profno FROM student;
    </select>


    <!-- 추가 -->

    <!-- 특정 학과에 소속된 모든 교수의 삭제를 위한 기능 정의 -->
    <delete id="deleteByDeptNo" 
        parameterType="kr.jinju.models.Student"> 
        DELETE FROM student WHERE deptno=#{deptNo}; 
    </delete> 
</mapper>